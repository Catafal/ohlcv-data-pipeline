#!/usr/bin/env python3
"""
Quick Plot Viewer for PNG files

Simple script to display matplotlib PNG plots using the default image viewer.
This makes it easy to view all the static plots generated by the scenario analysis.

Usage:
    python plot_viewer.py [plot_name]
    
    If no plot_name is provided, shows all available plots.
    
Examples:
    python plot_viewer.py                          # Show all plots
    python plot_viewer.py risk_metrics_comparison  # Show specific plot
"""

import os
import sys
import subprocess
from pathlib import Path

def main():
    plots_dir = Path("output/plots")
    
    if not plots_dir.exists():
        print("‚ùå No plots directory found. Run scenario analysis first.")
        return
    
    # Get all PNG files
    png_files = list(plots_dir.glob("*.png"))
    
    if not png_files:
        print("‚ùå No PNG plots found. Make sure matplotlib plots were generated.")
        return
    
    # If specific plot requested
    if len(sys.argv) > 1:
        requested_plot = sys.argv[1]
        matching_files = [f for f in png_files if requested_plot in f.name]
        
        if not matching_files:
            print(f"‚ùå Plot '{requested_plot}' not found.")
            print(f"Available plots: {[f.stem for f in png_files]}")
            return
        
        png_files = matching_files
    
    # Open each PNG file
    print(f"üìä Opening {len(png_files)} plot(s)...")
    
    for png_file in png_files:
        print(f"   ‚Ä¢ {png_file.name}")
        
        # Open with default system viewer
        if sys.platform == "darwin":  # macOS
            subprocess.run(["open", str(png_file)])
        elif sys.platform.startswith("linux"):  # Linux
            subprocess.run(["xdg-open", str(png_file)])
        elif sys.platform == "win32":  # Windows
            subprocess.run(["start", str(png_file)], shell=True)
        else:
            print(f"‚ö†Ô∏è  Unknown platform. Please open manually: {png_file}")
    
    print("‚úÖ Plots opened successfully!")

if __name__ == "__main__":
    main()